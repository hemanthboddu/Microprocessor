vendor_name = ModelSim
source_file = 1, /home/rafi/Dropbox/project_1/vhdl codes/control_path_final/control_path.vhd
source_file = 1, /opt/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, /opt/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, /opt/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, /opt/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, /home/rafi/Dropbox/project_1/vhdl codes/control_path_final/db/control_path.cbx.xml
design_name = control_path
instance = comp, \pcWrite~output , pcWrite~output, control_path, 1
instance = comp, \rfWrite~output , rfWrite~output, control_path, 1
instance = comp, \irWrite~output , irWrite~output, control_path, 1
instance = comp, \memRead~output , memRead~output, control_path, 1
instance = comp, \memWrite~output , memWrite~output, control_path, 1
instance = comp, \alu_op[0]~output , alu_op[0]~output, control_path, 1
instance = comp, \alu_op[1]~output , alu_op[1]~output, control_path, 1
instance = comp, \mux_mem_data~output , mux_mem_data~output, control_path, 1
instance = comp, \mux_mem_addr[0]~output , mux_mem_addr[0]~output, control_path, 1
instance = comp, \mux_mem_addr[1]~output , mux_mem_addr[1]~output, control_path, 1
instance = comp, \mux_a3~output , mux_a3~output, control_path, 1
instance = comp, \mux_a2~output , mux_a2~output, control_path, 1
instance = comp, \mux_a1[0]~output , mux_a1[0]~output, control_path, 1
instance = comp, \mux_a1[1]~output , mux_a1[1]~output, control_path, 1
instance = comp, \mux_a~output , mux_a~output, control_path, 1
instance = comp, \mux_b[0]~output , mux_b[0]~output, control_path, 1
instance = comp, \mux_b[1]~output , mux_b[1]~output, control_path, 1
instance = comp, \mux_d3[0]~output , mux_d3[0]~output, control_path, 1
instance = comp, \mux_d3[1]~output , mux_d3[1]~output, control_path, 1
instance = comp, \mux_pc[0]~output , mux_pc[0]~output, control_path, 1
instance = comp, \mux_pc[1]~output , mux_pc[1]~output, control_path, 1
instance = comp, \mux_pe_tmp~output , mux_pe_tmp~output, control_path, 1
instance = comp, \mux_before_a~output , mux_before_a~output, control_path, 1
instance = comp, \enable_alu~output , enable_alu~output, control_path, 1
instance = comp, \enable_a~output , enable_a~output, control_path, 1
instance = comp, \enable_b~output , enable_b~output, control_path, 1
instance = comp, \enable_c~output , enable_c~output, control_path, 1
instance = comp, \enable_mdr~output , enable_mdr~output, control_path, 1
instance = comp, \enable_pe_tmp~output , enable_pe_tmp~output, control_path, 1
instance = comp, \enable_pe_out~output , enable_pe_out~output, control_path, 1
instance = comp, \enable_pe_flag~output , enable_pe_flag~output, control_path, 1
instance = comp, \enable_eqflag~output , enable_eqflag~output, control_path, 1
instance = comp, \enable_carry_flag~output , enable_carry_flag~output, control_path, 1
instance = comp, \enable_Z_flag~output , enable_Z_flag~output, control_path, 1
instance = comp, \enable_pe~output , enable_pe~output, control_path, 1
instance = comp, \enable_pe_1_3~output , enable_pe_1_3~output, control_path, 1
instance = comp, \se_6_16~output , se_6_16~output, control_path, 1
instance = comp, \se_9_16~output , se_9_16~output, control_path, 1
instance = comp, \ze_9_16~output , ze_9_16~output, control_path, 1
instance = comp, \op_code[0]~input , op_code[0]~input, control_path, 1
instance = comp, \op_code[3]~input , op_code[3]~input, control_path, 1
instance = comp, \clock~input , clock~input, control_path, 1
instance = comp, \clock~inputclkctrl , clock~inputclkctrl, control_path, 1
instance = comp, \reset~input , reset~input, control_path, 1
instance = comp, \pe_flag~input , pe_flag~input, control_path, 1
instance = comp, \op_code[1]~input , op_code[1]~input, control_path, 1
instance = comp, \op_code[2]~input , op_code[2]~input, control_path, 1
instance = comp, \Selector0~2 , Selector0~2, control_path, 1
instance = comp, \Selector0~1 , Selector0~1, control_path, 1
instance = comp, \Equal0~0 , Equal0~0, control_path, 1
instance = comp, \next_state:next_state_var.lm_0~2 , \next_state:next_state_var.lm_0~2, control_path, 1
instance = comp, \state_signal.lm_0 , state_signal.lm_0, control_path, 1
instance = comp, \Selector7~0 , Selector7~0, control_path, 1
instance = comp, \Equal0~8 , Equal0~8, control_path, 1
instance = comp, \next_state:next_state_var.sm_0~2 , \next_state:next_state_var.sm_0~2, control_path, 1
instance = comp, \state_signal.sm_0 , state_signal.sm_0, control_path, 1
instance = comp, \Selector1~0 , Selector1~0, control_path, 1
instance = comp, \state_signal.priority , state_signal.priority, control_path, 1
instance = comp, \Selector0~3 , Selector0~3, control_path, 1
instance = comp, \CZ[1]~input , CZ[1]~input, control_path, 1
instance = comp, \Z~input , Z~input, control_path, 1
instance = comp, \carry~input , carry~input, control_path, 1
instance = comp, \CZ[0]~input , CZ[0]~input, control_path, 1
instance = comp, \Selector0~4 , Selector0~4, control_path, 1
instance = comp, \Selector0~5 , Selector0~5, control_path, 1
instance = comp, \Equal0~1 , Equal0~1, control_path, 1
instance = comp, \mux_a2~0 , mux_a2~0, control_path, 1
instance = comp, \state_signal.breq_0 , state_signal.breq_0, control_path, 1
instance = comp, \eqflag~input , eqflag~input, control_path, 1
instance = comp, \Equal0~2 , Equal0~2, control_path, 1
instance = comp, \next_state_var~4 , next_state_var~4, control_path, 1
instance = comp, \next_state_var~5 , next_state_var~5, control_path, 1
instance = comp, \next_state_var~6 , next_state_var~6, control_path, 1
instance = comp, \state_signal.add_0 , state_signal.add_0, control_path, 1
instance = comp, \Selector3~0 , Selector3~0, control_path, 1
instance = comp, \state_signal.wb_1 , state_signal.wb_1, control_path, 1
instance = comp, \next_state:next_state_var.breq_1~0 , \next_state:next_state_var.breq_1~0, control_path, 1
instance = comp, \state_signal.breq_1 , state_signal.breq_1, control_path, 1
instance = comp, \state_signal.rst~0 , state_signal.rst~0, control_path, 1
instance = comp, \state_signal.rst , state_signal.rst, control_path, 1
instance = comp, \next_state_var~3 , next_state_var~3, control_path, 1
instance = comp, \Equal0~3 , Equal0~3, control_path, 1
instance = comp, \mux_b~30 , mux_b~30, control_path, 1
instance = comp, \state_signal.lw_0 , state_signal.lw_0, control_path, 1
instance = comp, \Equal0~4 , Equal0~4, control_path, 1
instance = comp, \mux_b~31 , mux_b~31, control_path, 1
instance = comp, \state_signal.sw_0 , state_signal.sw_0, control_path, 1
instance = comp, \Selector2~1 , Selector2~1, control_path, 1
instance = comp, \enable_carry_flag~2 , enable_carry_flag~2, control_path, 1
instance = comp, \Equal0~7 , Equal0~7, control_path, 1
instance = comp, \next_state:next_state_var.nand_0~2 , \next_state:next_state_var.nand_0~2, control_path, 1
instance = comp, \state_signal.nand_0 , state_signal.nand_0, control_path, 1
instance = comp, \Selector2~0 , Selector2~0, control_path, 1
instance = comp, \Selector2~2 , Selector2~2, control_path, 1
instance = comp, \state_signal.wb_0 , state_signal.wb_0, control_path, 1
instance = comp, \Selector0~0 , Selector0~0, control_path, 1
instance = comp, \Selector0~6 , Selector0~6, control_path, 1
instance = comp, \state_signal.fetch , state_signal.fetch, control_path, 1
instance = comp, \irWrite~0 , irWrite~0, control_path, 1
instance = comp, \state_signal.dec_0 , state_signal.dec_0, control_path, 1
instance = comp, \pcWrite~0 , pcWrite~0, control_path, 1
instance = comp, \pcWrite~1 , pcWrite~1, control_path, 1
instance = comp, \rfWrite~0 , rfWrite~0, control_path, 1
instance = comp, \memRead~0 , memRead~0, control_path, 1
instance = comp, \memRead~1 , memRead~1, control_path, 1
instance = comp, \memWrite~0 , memWrite~0, control_path, 1
instance = comp, \alu_op~0 , alu_op~0, control_path, 1
instance = comp, \alu_op~1 , alu_op~1, control_path, 1
instance = comp, \mux_mem_addr~8 , mux_mem_addr~8, control_path, 1
instance = comp, \mux_mem_addr~9 , mux_mem_addr~9, control_path, 1
instance = comp, \mux_a3~0 , mux_a3~0, control_path, 1
instance = comp, \mux_a1~1 , mux_a1~1, control_path, 1
instance = comp, \mux_a1~0 , mux_a1~0, control_path, 1
instance = comp, \mux_a~0 , mux_a~0, control_path, 1
instance = comp, \enable_pe_out~0 , enable_pe_out~0, control_path, 1
instance = comp, \mux_a~1 , mux_a~1, control_path, 1
instance = comp, \mux_b~29 , mux_b~29, control_path, 1
instance = comp, \mux_b~32 , mux_b~32, control_path, 1
instance = comp, \mux_b~17 , mux_b~17, control_path, 1
instance = comp, \mux_b~33 , mux_b~33, control_path, 1
instance = comp, \mux_d3~3 , mux_d3~3, control_path, 1
instance = comp, \Equal0~5 , Equal0~5, control_path, 1
instance = comp, \mux_d3~2 , mux_d3~2, control_path, 1
instance = comp, \mux_pc~2 , mux_pc~2, control_path, 1
instance = comp, \mux_pc~3 , mux_pc~3, control_path, 1
instance = comp, \Equal0~6 , Equal0~6, control_path, 1
instance = comp, \mux_pc~4 , mux_pc~4, control_path, 1
instance = comp, \mux_before_a~0 , mux_before_a~0, control_path, 1
instance = comp, \enable_alu~0 , enable_alu~0, control_path, 1
instance = comp, \enable_alu~1 , enable_alu~1, control_path, 1
instance = comp, \next_state_var~2 , next_state_var~2, control_path, 1
instance = comp, \enable_a~3 , enable_a~3, control_path, 1
instance = comp, \enable_a~2 , enable_a~2, control_path, 1
instance = comp, \enable_b~2 , enable_b~2, control_path, 1
instance = comp, \enable_b~3 , enable_b~3, control_path, 1
instance = comp, \enable_alu~2 , enable_alu~2, control_path, 1
instance = comp, \enable_c~0 , enable_c~0, control_path, 1
instance = comp, \enable_pe_tmp~0 , enable_pe_tmp~0, control_path, 1
instance = comp, \enable_carry_flag~3 , enable_carry_flag~3, control_path, 1
instance = comp, \enable_Z_flag~8 , enable_Z_flag~8, control_path, 1
instance = comp, \se_6_16~2 , se_6_16~2, control_path, 1
instance = comp, \se_9_16~2 , se_9_16~2, control_path, 1
